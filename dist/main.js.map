{"version":3,"sources":["webpack://TTR/./node_modules/random-words/index.js","webpack://TTR/webpack/bootstrap","webpack://TTR/./src/js/Word.js","webpack://TTR/./src/ttr.js"],"names":["wordList","words","options","word","maxLength","wordUsed","rightSize","generateRandomWord","length","generateWordWithMaxLength","randInt","lessThan","Math","floor","random","exactly","min","max","wordsPerString","formatter","separator","total","results","token","relativeIndex","i","push","join","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","randomWords","require","container","document","getElementById","Word","n","this","ranWordExceptScore","y","speed","interval","newEle","createElement","setAttribute","style","left","position","top","fontSize","fontFamily","appendChild","createTextNode","append","ran","color","res","parseInt","addEventListener","spawnId","dropId","height","offsetHeight","level","localStorage","getItem","heart","score","spawned","highScores","JSON","parse","displaySLH","innerHTML","displayHeart","map","name","e","playClick","value","preventDefault","stopPropagation","finalScore","nickname","sort","a","b","splice","setItem","stringify","disabled","saveScore","saveBtn","resetGame","querySelector","classList","add","setInterval","spawn","drop","gameOver","clearInterval","parent","firstChild","removeChild","removeAllChildren","remove","dropWord","ele","parentNode","childElementCount","allSpawned","inputVal","key","filter","el","id","bind"],"mappings":"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U,MAAO,UAAW,UAAW,YAAa,UAAW,SAAU,SAAU,WAAY,MAAO,SAAU,WAAY,QAAS,OAAQ,UAAW,WAAY,MAAO,QAAS,MAAO,OAAQ,QAAS,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,OAAQ,QAAS,SAAU,UAAW,WAAY,QAAS,UAAW,QAAS,SAAU,OAAQ,WAAY,SAAU,WAAY,SAAU,SAAU,OAAQ,SAAU,OAAQ,OAAQ,SAAU,QAAS,OAAQ,SAAU,YAAa,YAAa,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,aAAc,QAAS,OAAQ,WAAY,WAAY,WAAY,WAAY,OAAQ,MAAO,WAAY,QAAS,OAAQ,SAAU,QAAS,WAAY,YAAa,WAAY,UAAW,UAAW,YAAa,QAAS,WAAY,SAAU,UAAW,WAAY,QAAS,QAAS,YAAa,YAAa,YAAa,UAAW,UAAW,QAAS,WAAY,UAAW,UAAW,UAAW,UAAW,aAAc,UAAW,WAAY,WAAY,SAAU,WAAY,WAAY,aAAc,QAAS,QAAS,UAAW,SAAU,OAAQ,QAAS,OAAQ,SAAU,UAAW,OAAQ,MAAO,UAAW,UAAW,QAAS,WAAY,QAAS,UAAW,QAAS,UAAW,QAAS,SAAU,OAAQ,QAAS,WAAY,OAAQ,QAAS,MAAO,QAAS,QAAS,UAAW,OAAQ,SAAU,MAAO,OAAQ,QAAS,OAAQ,SAAU,QAAS,OAAQ,UAAW,OAAQ,SAAU,SAAU,UAAW,SAAU,WAAY,YAAa,SAAU,MAAO,QAAS,UAAW,SAAU,UAAW,UAAW,eAAgB,YAAa,SAAU,aAAc,WAAY,SAAU,SAAU,UAAW,UAAW,SAAU,YAAa,UAAW,WAAY,UAAW,OAAQ,SAAU,SAAU,SAAU,QAAS,SAAU,OAAQ,OAAQ,OAAQ,SAAU,QAAS,OAAQ,OAAQ,SAAU,QAAS,OAAQ,OAAQ,OAAQ,SAAU,QAAS,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAAS,MAAO,SAAU,SAAU,OAAQ,QAAS,MAAO,UAAW,OAAQ,MAAO,SAAU,OAAQ,SAAU,OAAQ,OAAQ,OAAQ,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,aAAc,YAAa,OAAQ,QAAS,MAAO,MAAO,QAAS,SAAU,QAAS,SAAU,UAAW,aAAc,YAAa,QAAS,SAAU,MAAO,SAAU,SAAU,OAAQ,SAAU,SAAU,UAAW,MAAO,OAAQ,SAAU,QAAS,OAAQ,SAAU,SAAU,YAAa,OAAQ,OAAQ,QAAS,OAAQ,WAAY,WAAY,SAAU,UAAW,QAAS,UAAW,OAAQ,UAAW,SAAU,WAAY,QAAS,UAAW,QAAS,SAAU,QAAS,UAAW,QAAS,UAAW,QAAS,QAAS,QAAS,MAAO,QAAS,QAAS,QAAS,SAAU,UAAW,QAAS,WAAY,OAAQ,QAAS,OAAQ,QAAS,OAAQ,QAAS,QAAS,UAAW,OAAQ,SAAU,WAAY,QAAS,OAAQ,QAAS,OAAQ,OAAQ,QAAS,QAAS,OAAQ,SAAU,UAAW,SAAU,OAAQ,QAAS,SAAU,UAAW,SAAU,WAAY,SAAU,QAAS,OAAQ,SAAU,OAAQ,SAAU,MAAO,UAAW,YAAa,MAAO,OAAQ,QAAS,OAAQ,MAAO,QAAS,QAAS,QAAS,QAAS,QAAS,SAAU,WAAY,OAAQ,UAAW,QAAS,OAAQ,SAAU,QAAS,UAAW,WAAY,QAAS,QAAS,QAAS,SAAU,QAAS,OAAQ,KAAM,OAAQ,SAAU,UAAW,OAAQ,SAAU,OAAQ,QAAS,OAAQ,UAAW,QAAS,WAAY,QAAS,OAAQ,WAAY,UAAW,UAAW,YAAa,WAAY,YAAa,MAAO,OAAQ,OAAQ,OAAQ,QAAS,SAAU,QAAS,WAAY,QAAS,QAAS,UAAW,UAAW,WAAY,SAAU,QAAS,QAAS,QAAS,QAAS,SAAU,OAAQ,SAAU,QAAS,QAAS,SAAU,QAAS,SAAU,SAAU,SAAU,QAAS,SAAU,QAAS,WAAY,OAAQ,SAAU,QAAS,QAAS,YAAa,UAAW,OAAQ,SAAU,QAAS,QAAS,QAAS,QAAS,OAAQ,UAAW,QAAS,QAAS,QAAS,QAAS,UAAW,QAAS,QAAS,OAAQ,UAAW,QAAS,QAAS,QAAS,QAAS,WAAY,UAAW,WAAY,QAAS,SAAU,SAAU,WAAY,UAAW,SAAU,SAAU,QAAS,SAAU,WAAY,SAAU,YAAa,WAAY,QAAS,UAAW,UAAW,WAAY,UAAW,YAAa,UAAW,aAAc,OAAQ,SAAU,WAAY,QAAS,UAAW,OAAQ,MAAO,SAAU,MAAO,WAAY,SAAU,SAAU,UAAW,UAAW,OAAQ,UAAW,WAAY,aAAc,OAAQ,QAAS,QAAS,OAAQ,WAAY,QAAS,QAAS,WAAY,SAAU,SAAU,QAAS,OA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","file":"main.js","sourcesContent":["var wordList = [// Borrowed from xkcd password generator which borrowed it from wherever\n\"ability\", \"able\", \"aboard\", \"about\", \"above\", \"accept\", \"accident\", \"according\", \"account\", \"accurate\", \"acres\", \"across\", \"act\", \"action\", \"active\", \"activity\", \"actual\", \"actually\", \"add\", \"addition\", \"additional\", \"adjective\", \"adult\", \"adventure\", \"advice\", \"affect\", \"afraid\", \"after\", \"afternoon\", \"again\", \"against\", \"age\", \"ago\", \"agree\", \"ahead\", \"aid\", \"air\", \"airplane\", \"alike\", \"alive\", \"all\", \"allow\", \"almost\", \"alone\", \"along\", \"aloud\", \"alphabet\", \"already\", \"also\", \"although\", \"am\", \"among\", \"amount\", \"ancient\", \"angle\", \"angry\", \"animal\", \"announced\", \"another\", \"answer\", \"ants\", \"any\", \"anybody\", \"anyone\", \"anything\", \"anyway\", \"anywhere\", \"apart\", \"apartment\", \"appearance\", \"apple\", \"applied\", \"appropriate\", \"are\", \"area\", \"arm\", \"army\", \"around\", \"arrange\", \"arrangement\", \"arrive\", \"arrow\", \"art\", \"article\", \"as\", \"aside\", \"ask\", \"asleep\", \"at\", \"ate\", \"atmosphere\", \"atom\", \"atomic\", \"attached\", \"attack\", \"attempt\", \"attention\", \"audience\", \"author\", \"automobile\", \"available\", \"average\", \"avoid\", \"aware\", \"away\", \"baby\", \"back\", \"bad\", \"badly\", \"bag\", \"balance\", \"ball\", \"balloon\", \"band\", \"bank\", \"bar\", \"bare\", \"bark\", \"barn\", \"base\", \"baseball\", \"basic\", \"basis\", \"basket\", \"bat\", \"battle\", \"be\", \"bean\", \"bear\", \"beat\", \"beautiful\", \"beauty\", \"became\", \"because\", \"become\", \"becoming\", \"bee\", \"been\", \"before\", \"began\", \"beginning\", \"begun\", \"behavior\", \"behind\", \"being\", \"believed\", \"bell\", \"belong\", \"below\", \"belt\", \"bend\", \"beneath\", \"bent\", \"beside\", \"best\", \"bet\", \"better\", \"between\", \"beyond\", \"bicycle\", \"bigger\", \"biggest\", \"bill\", \"birds\", \"birth\", \"birthday\", \"bit\", \"bite\", \"black\", \"blank\", \"blanket\", \"blew\", \"blind\", \"block\", \"blood\", \"blow\", \"blue\", \"board\", \"boat\", \"body\", \"bone\", \"book\", \"border\", \"born\", \"both\", \"bottle\", \"bottom\", \"bound\", \"bow\", \"bowl\", \"box\", \"boy\", \"brain\", \"branch\", \"brass\", \"brave\", \"bread\", \"break\", \"breakfast\", \"breath\", \"breathe\", \"breathing\", \"breeze\", \"brick\", \"bridge\", \"brief\", \"bright\", \"bring\", \"broad\", \"broke\", \"broken\", \"brother\", \"brought\", \"brown\", \"brush\", \"buffalo\", \"build\", \"building\", \"built\", \"buried\", \"burn\", \"burst\", \"bus\", \"bush\", \"business\", \"busy\", \"but\", \"butter\", \"buy\", \"by\", \"cabin\", \"cage\", \"cake\", \"call\", \"calm\", \"came\", \"camera\", \"camp\", \"can\", \"canal\", \"cannot\", \"cap\", \"capital\", \"captain\", \"captured\", \"car\", \"carbon\", \"card\", \"care\", \"careful\", \"carefully\", \"carried\", \"carry\", \"case\", \"cast\", \"castle\", \"cat\", \"catch\", \"cattle\", \"caught\", \"cause\", \"cave\", \"cell\", \"cent\", \"center\", \"central\", \"century\", \"certain\", \"certainly\", \"chain\", \"chair\", \"chamber\", \"chance\", \"change\", \"changing\", \"chapter\", \"character\", \"characteristic\", \"charge\", \"chart\", \"check\", \"cheese\", \"chemical\", \"chest\", \"chicken\", \"chief\", \"child\", \"children\", \"choice\", \"choose\", \"chose\", \"chosen\", \"church\", \"circle\", \"circus\", \"citizen\", \"city\", \"class\", \"classroom\", \"claws\", \"clay\", \"clean\", \"clear\", \"clearly\", \"climate\", \"climb\", \"clock\", \"close\", \"closely\", \"closer\", \"cloth\", \"clothes\", \"clothing\", \"cloud\", \"club\", \"coach\", \"coal\", \"coast\", \"coat\", \"coffee\", \"cold\", \"collect\", \"college\", \"colony\", \"color\", \"column\", \"combination\", \"combine\", \"come\", \"comfortable\", \"coming\", \"command\", \"common\", \"community\", \"company\", \"compare\", \"compass\", \"complete\", \"completely\", \"complex\", \"composed\", \"composition\", \"compound\", \"concerned\", \"condition\", \"congress\", \"connected\", \"consider\", \"consist\", \"consonant\", \"constantly\", \"construction\", \"contain\", \"continent\", \"continued\", \"contrast\", \"control\", \"conversation\", \"cook\", \"cookies\", \"cool\", \"copper\", \"copy\", \"corn\", \"corner\", \"correct\", \"correctly\", \"cost\", \"cotton\", \"could\", \"count\", \"country\", \"couple\", \"courage\", \"course\", \"court\", \"cover\", \"cow\", \"cowboy\", \"crack\", \"cream\", \"create\", \"creature\", \"crew\", \"crop\", \"cross\", \"crowd\", \"cry\", \"cup\", \"curious\", \"current\", \"curve\", \"customs\", \"cut\", \"cutting\", \"daily\", \"damage\", \"dance\", \"danger\", \"dangerous\", \"dark\", \"darkness\", \"date\", \"daughter\", \"dawn\", \"day\", \"dead\", \"deal\", \"dear\", \"death\", \"decide\", \"declared\", \"deep\", \"deeply\", \"deer\", \"definition\", \"degree\", \"depend\", \"depth\", \"describe\", \"desert\", \"design\", \"desk\", \"detail\", \"determine\", \"develop\", \"development\", \"diagram\", \"diameter\", \"did\", \"die\", \"differ\", \"difference\", \"different\", \"difficult\", \"difficulty\", \"dig\", \"dinner\", \"direct\", \"direction\", \"directly\", \"dirt\", \"dirty\", \"disappear\", \"discover\", \"discovery\", \"discuss\", \"discussion\", \"disease\", \"dish\", \"distance\", \"distant\", \"divide\", \"division\", \"do\", \"doctor\", \"does\", \"dog\", \"doing\", \"doll\", \"dollar\", \"done\", \"donkey\", \"door\", \"dot\", \"double\", \"doubt\", \"down\", \"dozen\", \"draw\", \"drawn\", \"dream\", \"dress\", \"drew\", \"dried\", \"drink\", \"drive\", \"driven\", \"driver\", \"driving\", \"drop\", \"dropped\", \"drove\", \"dry\", \"duck\", \"due\", \"dug\", \"dull\", \"during\", \"dust\", \"duty\", \"each\", \"eager\", \"ear\", \"earlier\", \"early\", \"earn\", \"earth\", \"easier\", \"easily\", \"east\", \"easy\", \"eat\", \"eaten\", \"edge\", \"education\", \"effect\", \"effort\", \"egg\", \"eight\", \"either\", \"electric\", \"electricity\", \"element\", \"elephant\", \"eleven\", \"else\", \"empty\", \"end\", \"enemy\", \"energy\", \"engine\", \"engineer\", \"enjoy\", \"enough\", \"enter\", \"entire\", \"entirely\", \"environment\", \"equal\", \"equally\", \"equator\", \"equipment\", \"escape\", \"especially\", \"essential\", \"establish\", \"even\", \"evening\", \"event\", \"eventually\", \"ever\", \"every\", \"everybody\", \"everyone\", \"everything\", \"everywhere\", \"evidence\", \"exact\", \"exactly\", \"examine\", \"example\", \"excellent\", \"except\", \"exchange\", \"excited\", \"excitement\", \"exciting\", \"exclaimed\", \"exercise\", \"exist\", \"expect\", \"experience\", \"experiment\", \"explain\", \"explanation\", \"explore\", \"express\", \"expression\", \"extra\", \"eye\", \"face\", \"facing\", \"fact\", \"factor\", \"factory\", \"failed\", \"fair\", \"fairly\", \"fall\", \"fallen\", \"familiar\", \"family\", \"famous\", \"far\", \"farm\", \"farmer\", \"farther\", \"fast\", \"fastened\", \"faster\", \"fat\", \"father\", \"favorite\", \"fear\", \"feathers\", \"feature\", \"fed\", \"feed\", \"feel\", \"feet\", \"fell\", \"fellow\", \"felt\", \"fence\", \"few\", \"fewer\", \"field\", \"fierce\", \"fifteen\", \"fifth\", \"fifty\", \"fight\", \"fighting\", \"figure\", \"fill\", \"film\", \"final\", \"finally\", \"find\", \"fine\", \"finest\", \"finger\", \"finish\", \"fire\", \"fireplace\", \"firm\", \"first\", \"fish\", \"five\", \"fix\", \"flag\", \"flame\", \"flat\", \"flew\", \"flies\", \"flight\", \"floating\", \"floor\", \"flow\", \"flower\", \"fly\", \"fog\", \"folks\", \"follow\", \"food\", \"foot\", \"football\", \"for\", \"force\", \"foreign\", \"forest\", \"forget\", \"forgot\", \"forgotten\", \"form\", \"former\", \"fort\", \"forth\", \"forty\", \"forward\", \"fought\", \"found\", \"four\", \"fourth\", \"fox\", \"frame\", \"free\", \"freedom\", \"frequently\", \"fresh\", \"friend\", \"friendly\", \"frighten\", \"frog\", \"from\", \"front\", \"frozen\", \"fruit\", \"fuel\", \"full\", \"fully\", \"fun\", \"function\", \"funny\", \"fur\", \"furniture\", \"further\", \"future\", \"gain\", \"game\", \"garage\", \"garden\", \"gas\", \"gasoline\", \"gate\", \"gather\", \"gave\", \"general\", \"generally\", \"gentle\", \"gently\", \"get\", \"getting\", \"giant\", \"gift\", \"girl\", \"give\", \"given\", \"giving\", \"glad\", \"glass\", \"globe\", \"go\", \"goes\", \"gold\", \"golden\", \"gone\", \"good\", \"goose\", \"got\", \"government\", \"grabbed\", \"grade\", \"gradually\", \"grain\", \"grandfather\", \"grandmother\", \"graph\", \"grass\", \"gravity\", \"gray\", \"great\", \"greater\", \"greatest\", \"greatly\", \"green\", \"grew\", \"ground\", \"group\", \"grow\", \"grown\", \"growth\", \"guard\", \"guess\", \"guide\", \"gulf\", \"gun\", \"habit\", \"had\", \"hair\", \"half\", \"halfway\", \"hall\", \"hand\", \"handle\", \"handsome\", \"hang\", \"happen\", \"happened\", \"happily\", \"happy\", \"harbor\", \"hard\", \"harder\", \"hardly\", \"has\", \"hat\", \"have\", \"having\", \"hay\", \"he\", \"headed\", \"heading\", \"health\", \"heard\", \"hearing\", \"heart\", \"heat\", \"heavy\", \"height\", \"held\", \"hello\", \"help\", \"helpful\", \"her\", \"herd\", \"here\", \"herself\", \"hidden\", \"hide\", \"high\", \"higher\", \"highest\", \"highway\", \"hill\", \"him\", \"himself\", \"his\", \"history\", \"hit\", \"hold\", \"hole\", \"hollow\", \"home\", \"honor\", \"hope\", \"horn\", \"horse\", \"hospital\", \"hot\", \"hour\", \"house\", \"how\", \"however\", \"huge\", \"human\", \"hundred\", \"hung\", \"hungry\", \"hunt\", \"hunter\", \"hurried\", \"hurry\", \"hurt\", \"husband\", \"ice\", \"idea\", \"identity\", \"if\", \"ill\", \"image\", \"imagine\", \"immediately\", \"importance\", \"important\", \"impossible\", \"improve\", \"in\", \"inch\", \"include\", \"including\", \"income\", \"increase\", \"indeed\", \"independent\", \"indicate\", \"individual\", \"industrial\", \"industry\", \"influence\", \"information\", \"inside\", \"instance\", \"instant\", \"instead\", \"instrument\", \"interest\", \"interior\", \"into\", \"introduced\", \"invented\", \"involved\", \"iron\", \"is\", \"island\", \"it\", \"its\", \"itself\", \"jack\", \"jar\", \"jet\", \"job\", \"join\", \"joined\", \"journey\", \"joy\", \"judge\", \"jump\", \"jungle\", \"just\", \"keep\", \"kept\", \"key\", \"kids\", \"kill\", \"kind\", \"kitchen\", \"knew\", \"knife\", \"know\", \"knowledge\", \"known\", \"label\", \"labor\", \"lack\", \"lady\", \"laid\", \"lake\", \"lamp\", \"land\", \"language\", \"large\", \"larger\", \"largest\", \"last\", \"late\", \"later\", \"laugh\", \"law\", \"lay\", \"layers\", \"lead\", \"leader\", \"leaf\", \"learn\", \"least\", \"leather\", \"leave\", \"leaving\", \"led\", \"left\", \"leg\", \"length\", \"lesson\", \"let\", \"letter\", \"level\", \"library\", \"lie\", \"life\", \"lift\", \"light\", \"like\", \"likely\", \"limited\", \"line\", \"lion\", \"lips\", \"liquid\", \"list\", \"listen\", \"little\", \"live\", \"living\", \"load\", \"local\", \"locate\", \"location\", \"log\", \"lonely\", \"long\", \"longer\", \"look\", \"loose\", \"lose\", \"loss\", \"lost\", \"lot\", \"loud\", \"love\", \"lovely\", \"low\", \"lower\", \"luck\", \"lucky\", \"lunch\", \"lungs\", \"lying\", \"machine\", \"machinery\", \"mad\", \"made\", \"magic\", \"magnet\", \"mail\", \"main\", \"mainly\", \"major\", \"make\", \"making\", \"man\", \"managed\", \"manner\", \"manufacturing\", \"many\", \"map\", \"mark\", \"market\", \"married\", \"mass\", \"massage\", \"master\", \"material\", \"mathematics\", \"matter\", \"may\", \"maybe\", \"me\", \"meal\", \"mean\", \"means\", \"meant\", \"measure\", \"meat\", \"medicine\", \"meet\", \"melted\", \"member\", \"memory\", \"men\", \"mental\", \"merely\", \"met\", \"metal\", \"method\", \"mice\", \"middle\", \"might\", \"mighty\", \"mile\", \"military\", \"milk\", \"mill\", \"mind\", \"mine\", \"minerals\", \"minute\", \"mirror\", \"missing\", \"mission\", \"mistake\", \"mix\", \"mixture\", \"model\", \"modern\", \"molecular\", \"moment\", \"money\", \"monkey\", \"month\", \"mood\", \"moon\", \"more\", \"morning\", \"most\", \"mostly\", \"mother\", \"motion\", \"motor\", \"mountain\", \"mouse\", \"mouth\", \"move\", \"movement\", \"movie\", \"moving\", \"mud\", \"muscle\", \"music\", \"musical\", \"must\", \"my\", \"myself\", \"mysterious\", \"nails\", \"name\", \"nation\", \"national\", \"native\", \"natural\", \"naturally\", \"nature\", \"near\", \"nearby\", \"nearer\", \"nearest\", \"nearly\", \"necessary\", \"neck\", \"needed\", \"needle\", \"needs\", \"negative\", \"neighbor\", \"neighborhood\", \"nervous\", \"nest\", \"never\", \"new\", \"news\", \"newspaper\", \"next\", \"nice\", \"night\", \"nine\", \"no\", \"nobody\", \"nodded\", \"noise\", \"none\", \"noon\", \"nor\", \"north\", \"nose\", \"not\", \"note\", \"noted\", \"nothing\", \"notice\", \"noun\", \"now\", \"number\", \"numeral\", \"nuts\", \"object\", \"observe\", \"obtain\", \"occasionally\", \"occur\", \"ocean\", \"of\", \"off\", \"offer\", \"office\", \"officer\", \"official\", \"oil\", \"old\", \"older\", \"oldest\", \"on\", \"once\", \"one\", \"only\", \"onto\", \"open\", \"operation\", \"opinion\", \"opportunity\", \"opposite\", \"or\", \"orange\", \"orbit\", \"order\", \"ordinary\", \"organization\", \"organized\", \"origin\", \"original\", \"other\", \"ought\", \"our\", \"ourselves\", \"out\", \"outer\", \"outline\", \"outside\", \"over\", \"own\", \"owner\", \"oxygen\", \"pack\", \"package\", \"page\", \"paid\", \"pain\", \"paint\", \"pair\", \"palace\", \"pale\", \"pan\", \"paper\", \"paragraph\", \"parallel\", \"parent\", \"park\", \"part\", \"particles\", \"particular\", \"particularly\", \"partly\", \"parts\", \"party\", \"pass\", \"passage\", \"past\", \"path\", \"pattern\", \"pay\", \"peace\", \"pen\", \"pencil\", \"people\", \"per\", \"percent\", \"perfect\", \"perfectly\", \"perhaps\", \"period\", \"person\", \"personal\", \"pet\", \"phrase\", \"physical\", \"piano\", \"pick\", \"picture\", \"pictured\", \"pie\", \"piece\", \"pig\", \"pile\", \"pilot\", \"pine\", \"pink\", \"pipe\", \"pitch\", \"place\", \"plain\", \"plan\", \"plane\", \"planet\", \"planned\", \"planning\", \"plant\", \"plastic\", \"plate\", \"plates\", \"play\", \"pleasant\", \"please\", \"pleasure\", \"plenty\", \"plural\", \"plus\", \"pocket\", \"poem\", \"poet\", \"poetry\", \"point\", \"pole\", \"police\", \"policeman\", \"political\", \"pond\", \"pony\", \"pool\", \"poor\", \"popular\", \"population\", \"porch\", \"port\", \"position\", \"positive\", \"possible\", \"possibly\", \"post\", \"pot\", \"potatoes\", \"pound\", \"pour\", \"powder\", \"power\", \"powerful\", \"practical\", \"practice\", \"prepare\", \"present\", \"president\", \"press\", \"pressure\", \"pretty\", \"prevent\", \"previous\", \"price\", \"pride\", \"primitive\", \"principal\", \"principle\", \"printed\", \"private\", \"prize\", \"probably\", \"problem\", \"process\", \"produce\", \"product\", \"production\", \"program\", \"progress\", \"promised\", \"proper\", \"properly\", \"property\", \"protection\", \"proud\", \"prove\", \"provide\", \"public\", \"pull\", \"pupil\", \"pure\", \"purple\", \"purpose\", \"push\", \"put\", \"putting\", \"quarter\", \"queen\", \"question\", \"quick\", \"quickly\", \"quiet\", \"quietly\", \"quite\", \"rabbit\", \"race\", \"radio\", \"railroad\", \"rain\", \"raise\", \"ran\", \"ranch\", \"range\", \"rapidly\", \"rate\", \"rather\", \"raw\", \"rays\", \"reach\", \"read\", \"reader\", \"ready\", \"real\", \"realize\", \"rear\", \"reason\", \"recall\", \"receive\", \"recent\", \"recently\", \"recognize\", \"record\", \"red\", \"refer\", \"refused\", \"region\", \"regular\", \"related\", \"relationship\", \"religious\", \"remain\", \"remarkable\", \"remember\", \"remove\", \"repeat\", \"replace\", \"replied\", \"report\", \"represent\", \"require\", \"research\", \"respect\", \"rest\", \"result\", \"return\", \"review\", \"rhyme\", \"rhythm\", \"rice\", \"rich\", \"ride\", \"riding\", \"right\", \"ring\", \"rise\", \"rising\", \"river\", \"road\", \"roar\", \"rock\", \"rocket\", \"rocky\", \"rod\", \"roll\", \"roof\", \"room\", \"root\", \"rope\", \"rose\", \"rough\", \"round\", \"route\", \"row\", \"rubbed\", \"rubber\", \"rule\", \"ruler\", \"run\", \"running\", \"rush\", \"sad\", \"saddle\", \"safe\", \"safety\", \"said\", \"sail\", \"sale\", \"salmon\", \"salt\", \"same\", \"sand\", \"sang\", \"sat\", \"satellites\", \"satisfied\", \"save\", \"saved\", \"saw\", \"say\", \"scale\", \"scared\", \"scene\", \"school\", \"science\", \"scientific\", \"scientist\", \"score\", \"screen\", \"sea\", \"search\", \"season\", \"seat\", \"second\", \"secret\", \"section\", \"see\", \"seed\", \"seeing\", \"seems\", \"seen\", \"seldom\", \"select\", \"selection\", \"sell\", \"send\", \"sense\", \"sent\", \"sentence\", \"separate\", \"series\", \"serious\", \"serve\", \"service\", \"sets\", \"setting\", \"settle\", \"settlers\", \"seven\", \"several\", \"shade\", \"shadow\", \"shake\", \"shaking\", \"shall\", \"shallow\", \"shape\", \"share\", \"sharp\", \"she\", \"sheep\", \"sheet\", \"shelf\", \"shells\", \"shelter\", \"shine\", \"shinning\", \"ship\", \"shirt\", \"shoe\", \"shoot\", \"shop\", \"shore\", \"short\", \"shorter\", \"shot\", \"should\", \"shoulder\", \"shout\", \"show\", \"shown\", \"shut\", \"sick\", \"sides\", \"sight\", \"sign\", \"signal\", \"silence\", \"silent\", \"silk\", \"silly\", \"silver\", \"similar\", \"simple\", \"simplest\", \"simply\", \"since\", \"sing\", \"single\", \"sink\", \"sister\", \"sit\", \"sitting\", \"situation\", \"six\", \"size\", \"skill\", \"skin\", \"sky\", \"slabs\", \"slave\", \"sleep\", \"slept\", \"slide\", \"slight\", \"slightly\", \"slip\", \"slipped\", \"slope\", \"slow\", \"slowly\", \"small\", \"smaller\", \"smallest\", \"smell\", \"smile\", \"smoke\", \"smooth\", \"snake\", \"snow\", \"so\", \"soap\", \"social\", \"society\", \"soft\", \"softly\", \"soil\", \"solar\", \"sold\", \"soldier\", \"solid\", \"solution\", \"solve\", \"some\", \"somebody\", \"somehow\", \"someone\", \"something\", \"sometime\", \"somewhere\", \"son\", \"song\", \"soon\", \"sort\", \"sound\", \"source\", \"south\", \"southern\", \"space\", \"speak\", \"special\", \"species\", \"specific\", \"speech\", \"speed\", \"spell\", \"spend\", \"spent\", \"spider\", \"spin\", \"spirit\", \"spite\", \"split\", \"spoken\", \"sport\", \"spread\", \"spring\", \"square\", \"stage\", \"stairs\", \"stand\", \"standard\", \"star\", \"stared\", \"start\", \"state\", \"statement\", \"station\", \"stay\", \"steady\", \"steam\", \"steel\", \"steep\", \"stems\", \"step\", \"stepped\", \"stick\", \"stiff\", \"still\", \"stock\", \"stomach\", \"stone\", \"stood\", \"stop\", \"stopped\", \"store\", \"storm\", \"story\", \"stove\", \"straight\", \"strange\", \"stranger\", \"straw\", \"stream\", \"street\", \"strength\", \"stretch\", \"strike\", \"string\", \"strip\", \"strong\", \"stronger\", \"struck\", \"structure\", \"struggle\", \"stuck\", \"student\", \"studied\", \"studying\", \"subject\", \"substance\", \"success\", \"successful\", \"such\", \"sudden\", \"suddenly\", \"sugar\", \"suggest\", \"suit\", \"sum\", \"summer\", \"sun\", \"sunlight\", \"supper\", \"supply\", \"support\", \"suppose\", \"sure\", \"surface\", \"surprise\", \"surrounded\", \"swam\", \"sweet\", \"swept\", \"swim\", \"swimming\", \"swing\", \"swung\", \"syllable\", \"symbol\", \"system\", \"table\", \"tail\", \"take\", \"taken\", \"tales\", \"talk\", \"tall\", \"tank\", \"tape\", \"task\", \"taste\", \"taught\", \"tax\", \"tea\", \"teach\", \"teacher\", \"team\", \"tears\", \"teeth\", \"telephone\", \"television\", \"tell\", \"temperature\", \"ten\", \"tent\", \"term\", \"terrible\", \"test\", \"than\", \"thank\", \"that\", \"thee\", \"them\", \"themselves\", \"then\", \"theory\", \"there\", \"therefore\", \"these\", \"they\", \"thick\", \"thin\", \"thing\", \"think\", \"third\", \"thirty\", \"this\", \"those\", \"thou\", \"though\", \"thought\", \"thousand\", \"thread\", \"three\", \"threw\", \"throat\", \"through\", \"throughout\", \"throw\", \"thrown\", \"thumb\", \"thus\", \"thy\", \"tide\", \"tie\", \"tight\", \"tightly\", \"till\", \"time\", \"tin\", \"tiny\", \"tip\", \"tired\", \"title\", \"to\", \"tobacco\", \"today\", \"together\", \"told\", \"tomorrow\", \"tone\", \"tongue\", \"tonight\", \"too\", \"took\", \"tool\", \"top\", \"topic\", \"torn\", \"total\", \"touch\", \"toward\", \"tower\", \"town\", \"toy\", \"trace\", \"track\", \"trade\", \"traffic\", \"trail\", \"train\", \"transportation\", \"trap\", \"travel\", \"treated\", \"tree\", \"triangle\", \"tribe\", \"trick\", \"tried\", \"trip\", \"troops\", \"tropical\", \"trouble\", \"truck\", \"trunk\", \"truth\", \"try\", \"tube\", \"tune\", \"turn\", \"twelve\", \"twenty\", \"twice\", \"two\", \"type\", \"typical\", \"uncle\", \"under\", \"underline\", \"understanding\", \"unhappy\", \"union\", \"unit\", \"universe\", \"unknown\", \"unless\", \"until\", \"unusual\", \"up\", \"upon\", \"upper\", \"upward\", \"us\", \"use\", \"useful\", \"using\", \"usual\", \"usually\", \"valley\", \"valuable\", \"value\", \"vapor\", \"variety\", \"various\", \"vast\", \"vegetable\", \"verb\", \"vertical\", \"very\", \"vessels\", \"victory\", \"view\", \"village\", \"visit\", \"visitor\", \"voice\", \"volume\", \"vote\", \"vowel\", \"voyage\", \"wagon\", \"wait\", \"walk\", \"wall\", \"want\", \"war\", \"warm\", \"warn\", \"was\", \"wash\", \"waste\", \"watch\", \"water\", \"wave\", \"way\", \"we\", \"weak\", \"wealth\", \"wear\", \"weather\", \"week\", \"weigh\", \"weight\", \"welcome\", \"well\", \"went\", \"were\", \"west\", \"western\", \"wet\", \"whale\", \"what\", \"whatever\", \"wheat\", \"wheel\", \"when\", \"whenever\", \"where\", \"wherever\", \"whether\", \"which\", \"while\", \"whispered\", \"whistle\", \"white\", \"who\", \"whole\", \"whom\", \"whose\", \"why\", \"wide\", \"widely\", \"wife\", \"wild\", \"will\", \"willing\", \"win\", \"wind\", \"window\", \"wing\", \"winter\", \"wire\", \"wise\", \"wish\", \"with\", \"within\", \"without\", \"wolf\", \"women\", \"won\", \"wonder\", \"wonderful\", \"wood\", \"wooden\", \"wool\", \"word\", \"wore\", \"work\", \"worker\", \"world\", \"worried\", \"worry\", \"worse\", \"worth\", \"would\", \"wrapped\", \"write\", \"writer\", \"writing\", \"written\", \"wrong\", \"wrote\", \"yard\", \"year\", \"yellow\", \"yes\", \"yesterday\", \"yet\", \"you\", \"young\", \"younger\", \"your\", \"yourself\", \"youth\", \"zero\", \"zebra\", \"zipper\", \"zoo\", \"zulu\"];\n\nfunction words(options) {\n  function word() {\n    if (options && options.maxLength > 1) {\n      return generateWordWithMaxLength();\n    } else {\n      return generateRandomWord();\n    }\n  }\n\n  function generateWordWithMaxLength() {\n    var rightSize = false;\n    var wordUsed;\n\n    while (!rightSize) {\n      wordUsed = generateRandomWord();\n\n      if (wordUsed.length <= options.maxLength) {\n        rightSize = true;\n      }\n    }\n\n    return wordUsed;\n  }\n\n  function generateRandomWord() {\n    return wordList[randInt(wordList.length)];\n  }\n\n  function randInt(lessThan) {\n    return Math.floor(Math.random() * lessThan);\n  } // No arguments = generate one word\n\n\n  if (typeof options === 'undefined') {\n    return word();\n  } // Just a number = return that many words\n\n\n  if (typeof options === 'number') {\n    options = {\n      exactly: options\n    };\n  } // options supported: exactly, min, max, join\n\n\n  if (options.exactly) {\n    options.min = options.exactly;\n    options.max = options.exactly;\n  } // not a number = one word par string\n\n\n  if (typeof options.wordsPerString !== 'number') {\n    options.wordsPerString = 1;\n  } //not a function = returns the raw word\n\n\n  if (typeof options.formatter !== 'function') {\n    options.formatter = word => word;\n  } //not a string = separator is a space\n\n\n  if (typeof options.separator !== 'string') {\n    options.separator = ' ';\n  }\n\n  var total = options.min + randInt(options.max + 1 - options.min);\n  var results = [];\n  var token = '';\n  var relativeIndex = 0;\n\n  for (var i = 0; i < total * options.wordsPerString; i++) {\n    if (relativeIndex === options.wordsPerString - 1) {\n      token += options.formatter(word(), relativeIndex);\n    } else {\n      token += options.formatter(word(), relativeIndex) + options.separator;\n    }\n\n    relativeIndex++;\n\n    if ((i + 1) % options.wordsPerString === 0) {\n      results.push(token);\n      token = '';\n      relativeIndex = 0;\n    }\n  }\n\n  if (typeof options.join === 'string') {\n    results = results.join(options.join);\n  }\n\n  return results;\n}\n\nmodule.exports = words; // Export the word list as it is often useful\n\nwords.wordList = wordList;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","let randomWords = require('random-words');\nlet container = document.getElementById('ttr-game');\n\nexport default class Word {\n  constructor(n) {\n    this.word = this.ranWordExceptScore();\n    this.y = 0;\n    this.speed = random(n);\n    this.interval = 1500;\n\n    this.newEle = document.createElement(\"h1\");\n    this.newEle.setAttribute('id', this.word);\n    this.newEle.style.left = Math.floor(Math.random() * 90) + 1 + '%';\n    this.newEle.style.position = 'absolute';\n    this.newEle.style.top = 0;\n    this.newEle.style.fontSize = 'larger';\n    this.newEle.style.fontFamily = 'Marvel';\n    this.newEle.appendChild(document.createTextNode(this.word));\n    container.append(this.newEle);\n\n    let ran = Math.random();\n    if (ran > 0.50) {\n      this.color = 'white'\n    } else if (0.40 < ran && ran < 0.50) {\n      this.color = 'yellow'\n    } else if (0.30 < ran && ran < 0.40) {\n      this.color = 'cyan'\n    } else if (0.20 < ran && ran < 0.30) {\n      this.color = 'red'\n    } else if (0.10 < ran && ran < 0.20) {\n      this.color = 'lime'\n    } else {\n      this.color = 'magenta'\n    }\n    this.newEle.style.color = this.color;\n  }\n\n  dropWord() {\n    // let regex = /[^0-9]/g;\n    // let res = this.newEle.style.top.replace(regex, \"\");\n    let res = parseInt(this.newEle.style.top)\n    res += this.speed;\n\n    this.y = res;\n    this.newEle.style.top = res + 'px';\n  }\n\n  ranWordExceptScore() {\n    let word = randomWords();\n    while (word == 'score') {\n      word = randomWords();\n    }\n    return word\n  }\n\n}\n\nfunction random(n) {\n  let num;\n  if (n == 1) {\n    num = (Math.random() + n)\n  }\n  else {\n    num = (Math.random() + (n / 2))\n  }\n  return num;\n}\n\n","import \"./styles/index.scss\";\nimport Word from './js/Word'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let container = document.getElementById('ttr-game')\n  let height = container.offsetHeight;\n  let finalScore = document.getElementById('go-score');\n  let mostRecentScore = localStorage.getItem('mostRecentScore');\n  let level = 1;\n  let heart = 5;\n  let score = 0;\n  let words = [];\n  let spawned = [];\n  let spawnId;\n  let dropId;\n  let highScores = JSON.parse(localStorage.getItem(\"highScores\")) || []\n\n  const MAX_HIGH_SCORES = 10;\n\n  function displaySLH() {\n    document.getElementById('score').innerHTML = score;\n    document.getElementById('level').innerHTML = level;\n    document.getElementById('heart').innerHTML = displayHeart(heart);\n    document.getElementById('highScoresList').innerHTML = displayScores();\n  }\n\n  function displayHeart(heart) {\n    let res = \"<strong>\"\n    for (let i = 0; i < heart; i++) {\n      res += '<i class=\"fas fa-heart\"></i>'\n    }\n    return res += \"</strong>\"\n  }\n\n  function displayScores() {\n    return highScores.map((score, i) => {\n      return `<li> ${i + 1}.  ${score.name} - ${score.score}</li>`\n    }).join(\"\")\n  }\n\n\n  document.getElementById('btn-play').addEventListener(\"click\", (e) => playClick(e))\n  document.getElementById('btn-replay').addEventListener(\"click\", (e) => playClick(e))\n  document.getElementById('btn-submit').addEventListener('click', e => saveScore(e))\n  let saveBtn = document.getElementById('btn-submit')\n  let nickname = document.getElementById('nickname')\n  nickname.addEventListener('keyup', () => { saveBtn.disabled = !nickname.value })\n\n  function playClick(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    resetGame();\n    gameStart();\n  }\n\n  function gameStart() {\n    resetGame();\n    displaySLH();\n\n    let modal = document.querySelector('.modal');\n    modal.classList.add('hide')\n    let gomodal = document.querySelector('.gameover-modal');\n    gomodal.classList.add('hide')\n    spawnId = setInterval(spawn, 1500)\n    dropId = setInterval(drop, 1000 / 60)\n  }\n\n  function resetGame() {\n    level = 1;\n    heart = 5;\n    score = 0;\n    words = [];\n    spawned = [];\n    document.getElementById('nickname').value = '';\n    document.getElementById('nickname').disabled = false;\n    document.getElementById('msg').innerHTML = '';\n  }\n\n  function gameOver() {\n    clearInterval(spawnId);\n    clearInterval(dropId);\n\n    localStorage.setItem('mostRecentScore', score)\n    document.getElementById('go-score').innerHTML = score;\n    removeAllChildren(container)\n    let goModal = document.querySelector('.gameover-modal');\n    goModal.classList.remove('hide')\n\n  }\n\n  document.getElementById('typing-input').addEventListener('keypress', function (e) {\n    let inputVal = document.getElementById('typing-input').value;\n    let ele = document.getElementById(inputVal);\n    if (e.key === 'Enter' && ele) {\n      ele.parentNode.removeChild(ele);\n      words = words.filter(el => el.word != ele.id)\n      if (ele.style.color == 'red' && words.length > 1) {\n        words[Math.floor(Math.random() * words.length)].speed + 3;\n      }\n      if (ele.style.color == 'yellow' && words.length > 1) {\n        words[Math.floor(Math.random() * words.length)].speed - 1;\n      }\n      if (ele.style.color == 'lime') {\n        heart += 1;\n        displaySLH();\n      }\n      if (ele.style.color == 'cyan' && words.length > 1) {\n        while (true) {\n          if (words[Math.floor(Math.random() * words.length)].speed != 0) {\n            words[Math.floor(Math.random() * words.length)].speed = 0;\n            break\n          };\n        }\n      }\n      if (ele.style.color == 'magenta') {\n        heart -= 1;\n        displaySLH();\n      }\n      score += 100;\n      displaySLH();\n\n      if (heart > 0 && allSpawned() && words.length == 0) {\n\n        level += 1;\n        spawned = []\n        displaySLH()\n        spawnId = setInterval(spawn.bind(this), 1000)\n      }\n      if (heart == 0) {\n        clearInterval(spawnId)\n      }\n    }\n    if (e.key === 'Enter') {\n      document.getElementById('typing-input').value = '';\n    }\n  });\n\n\n  function spawn() {\n    if (heart != 0) {\n      let word = new Word(level);\n      spawned.push(word.word);\n\n      words.push(word);\n    }\n    if (spawned.length == level + 5) {\n      clearInterval(spawnId);\n    }\n    if (heart == 0) {\n      gameOver();\n      clearInterval(spawnId);\n      clearInterval(dropId);\n    }\n  }\n\n\n  function drop() {\n    let container = document.getElementById('ttr-game')\n    for (let i = 0; i < words.length; i++) {\n      words[i].dropWord();\n      if (words[i].y > height - 30) {\n        let ele = document.getElementById(words[i].word);\n        ele.parentNode.removeChild(ele);\n        words.splice(i, 1);\n        heart -= 1;\n        document.getElementById('heart').innerHTML = displayHeart(heart);\n      }\n      // if (container.childElementCount == 0 && allSpawned() && heart > 0) {\n      //   \n      //   level += 1;\n      //   document.getElementById('level').innerHTML = level;\n      //   spawned = []\n      //   spawnId = setInterval(spawn, 1000)\n      //   if (heart == 0) {\n      //     clearInterval(spawnId)\n      //     clearInterval(dropId)\n      //     gameOver();\n      //   }\n      // }\n      if (heart == 0) {\n        clearInterval(dropId)\n        clearInterval(spawnId);\n        gameOver();\n      }\n    }\n    if (container.childElementCount == 0 && allSpawned() && heart > 0) {\n\n      level += 1;\n      document.getElementById('level').innerHTML = level;\n      spawned = []\n      spawnId = setInterval(spawn, 1000)\n      if (heart == 0) {\n        clearInterval(spawnId)\n        clearInterval(dropId)\n        gameOver();\n      }\n    }\n  }\n\n  function removeAllChildren(parent) {\n    while (parent.firstChild) {\n      parent.removeChild(parent.firstChild)\n    }\n  }\n\n  function saveScore(e) {\n    document.getElementById('msg').innerHTML = `Your score has been saved ${document.getElementById('nickname').value}`\n    e.preventDefault();\n    e.stopPropagation()\n    const finalScore = {\n      score: localStorage.getItem('mostRecentScore'),\n      name: nickname.value\n    }\n    highScores.push(finalScore);\n    highScores.sort((a, b) => {\n      return b.score - a.score\n    })\n    highScores.splice(MAX_HIGH_SCORES);\n    localStorage.setItem('highScores', JSON.stringify(highScores));\n    document.getElementById('nickname').value = '';\n    document.getElementById('nickname').disabled = true;\n    document.getElementById('btn-submit').innerHTML = 'SAVED';\n    document.getElementById('btn-submit').disabled = true;\n  }\n\n  function allSpawned() {\n    return spawned.length == level + 5 ? true : false\n  }\n\n})\n\n"],"sourceRoot":""}